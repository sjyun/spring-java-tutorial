/*
 deprecated
   No such property: createDir for class: org.gradle.api.DefaultTask_Decorated
      sourceSets*.java.srcDirs*.each createDir
     sourceSets*.resources.srcDirs*.each createDir
*/


apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'

apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'

apply plugin: 'idea'


ext{
     javaVersion = '1.8'
 }

sourceCompatibility = javaVersion
targetCompatibility = javaVersion


[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

buildDir = 'build'

repositories {
    jcenter()
}

dependencies{
   providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
   compile 'org.springframework:spring-webmvc:3.2.2.RELEASE'
   runtime 'javax.servlet:jstl:1.1.2'
}



task initProject << {
	sourceSets*.java.srcDirs*.each { it.mkdirs() }
	sourceSets*.resources.srcDirs*.each { it.mkdirs() }


	def webappDir = "$rootDir/src/main/webapp"


	file(webappDir + "/WEB-INF/views").mkdirs()
	file(webappDir + "/META-INF").mkdir()

}

 war {
    exclude 'WEB-INF/lib/**'
    exclude 'WEB-INF/classes/**'
}


  eclipse{
		classpath {
			downloadSources = true
			defaultOutputDir = file("${buildDir}/classes/main")
		file{
			withXml{
        		xml -> def node = xml.asNode()
       			node.remove( node.find {it.@path == 'org.eclipse.jst.j2ee.internal.web.container'})
       			node.appendNode('classpathentry',[kind:'con',path: 'org.eclipse.jst.j2ee.internal.web.container', exported:'true'])
     			}
		    }
	 	}

		jdt{
			sourceCompatibility = 1.8
			targetCompatibility = 1.8
		}

		wtp{
			component{
				contextPath ='/'
			}
			facet{
				facet name :'jst.web',   version:'3.0'
				facet name : 'jst.java', version:'1.7'
			}
		}
    }


  idea{
	module{
		downloadSources = true
	}
  }

    tasks.eclipse.dependsOn initProject
    tasks.eclipse.dependsOn cleanEclipse
